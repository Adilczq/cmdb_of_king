
version: '3.7'

services:

  mysql:
    build: ./docker-cmdb/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - type: volume
        source: mysqldb
        target: /var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: QFedu123!
      MYSQL_USER: cmdb
      MYSQL_DATABASE: cmdb
      
    expose:
      - "3306"
    networks:
      - jumpserver-test 
    container_name: "mysql_server"
    depends_on:
      - cmdb

  redis:
    build: ./docker-cmdb/redis
    restart: always
    networks:
       - jumpserver-test
    container_name: "redis_server"

  rabbitmq:
    build: ./docker-cmdb/rabbitmq
    restart: always
    networks:
       - jumpserver-test
    container_name: "rabbitmq_server"

  nginx:
    build: ./docker-cmdb/nginx
    # image: nginx:alpine3.10 
    restart: always
    volumes:
      - type: bind
        source: ./docker-cmdb/nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./docker-cmdb/nginx/allstatic
        target: /allstatic
    networks:
      - jumpserver-test
    ports:
      - "10086:80"
    tty: true
    container_name: "nginx_server"
    depends_on:
      - cmdb

  cmdb:
    build: ./docker-cmdb/cmdb
    tty: true
    #uwsgi 监听端口
    expose:
      - "8000"
    container_name: "cmdb_server"
    networks: 
      - jumpserver-test



  gitlab:
    image: git
    restart: always
    hostname: 'gitlab.king.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://10.0.122.100:9280'
        unicorn['worker_timeout'] = 60
        unicorn['worker_processes'] = 3 # worker进程数
        unicorn['worker_memory_limit_min'] = "200 * 1 << 20" # worker最小内存
        unicorn['worker_memory_limit_max'] = "300 * 1 << 20"  # worker最大内存
        sidekiq['concurrency'] = 10
        postgresql['shared_buffers'] = "128MB"
        postgresql['max_worker_processes'] = 8
    networks:
      - jumpserver-test
    ports:
      - '9280:9280'
    volumes:
      - './gitlab/config:/etc/gitlab'
      - './gitlab/logs:/var/log/gitlab'
      - './gitlab/data:/var/opt/gitlab'
    container_name: "gitlab_server"

  jenkins:
      image: jenkins_blue 
      restart: always
      privileged: true
      user: root
      volumes:
        - type: bind
          source: ./jenkins/jenkins_home
          target: /var/jenkins_home
        - type: bind
          source: /var/run/docker.sock
          target: /var/run/docker.sock
          read_only: "yes"
      networks:
        - jumpserver-test
      ports:
        - "9980:8080"
      container_name: "jenkins_server"

volumes:
  mysqldb:
networks:
  jumpserver-test:


